<?xml version="1.0"?>
<cms
      useMinifiedResources="true"
      resourcesBasePath="//d3hf62uppzvupw.cloudfront.net/{bcms.version}/"
      loginUrl="/?returnUrl={returnUrl}"
      pageNotFoundUrl="/404/"
      workingDirectoryRootPath="~/App_Data/BetterCms"
      articleUrlPrefix="/articles/{0}/"

      enforcePermissions="true">

  <urlPatterns>
    <add expression="^[0-9a-z-/]+$" description="Path can contain only following characters: '0-9', 'a-z', '-', '/'" />
    <add expression="^/" description="Path must start with forward flash: /" />
    <add expression="/$" description="Path must end with forward flash: /" />
    <add expression="^/(cms|bin)/" negate="true" description="Url can not have these as first directory: cms, local, bin" />
  </urlPatterns>

  <menuSections>
    <section name="Custom Links">
      <links>
        <link name="Home" url="/" />
        <link name="Documentation" url="/documentation/" />
      </links>
    </section>
  </menuSections>

  <!-- ******************** STORAGE *********************** -->
  <!-- serviceType="FileSystem" defines to use server's file system as the uploads storage. -->
  <!-- processTimeout defines how much time file will be marked as processing, while it turns to failed. -->
  <storage serviceType="FileSystem" contentRoot="~/uploads/" contentRootUrl="~/uploads" processTimeout="00:30:00" />
  
  <!-- serviceType="Ftp" defines to use FTP server as the upload storage:
  <storage serviceType="Ftp" contentRoot="[images root]/" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="FtpRoot" value="[ftp root]" />
    <add key="FtpUserName" value="[ftp user name]" />
    <add key="FtpPassword" value="[ftp password]" />
    <add key="UsePassiveMode" value="false" />
  </storage>
   -->

  <!-- serviceType="Auto" defines to use concrete storage service implementation defined with the typeName property.
  If BetterCms.Module.AmazonS3Storage is installed:
  <storage serviceType="Auto" contentRoot="[images root]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="AmazonAccessKey" value="[your access key]" />
    <add key="AmazonSecretKey" value="[your secret key]" />
    <add key="AmazonBucketName" value="[your bucket name]" />
  </storage>
  
  If BetterCms.Module.WindowsAzureStorage is installed:
   <storage serviceType="Auto" contentRoot="[images root]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="AzureAccountName" value="[your access key]" />
    <add key="AzureSecondaryKey" value="[your secret key]" />
    <add key="AzureContainerName" value="[your Azure container name]" />
    <add key="AzureUseHttps" value="[your bucket name]" />
  </storage>
  -->

  <!-- serviceType="Custom" defines to use concrete storage service implementation defined with the typeName property.
  <storage serviceType="Custom" contentRoot="[path to upload files]" contentRootUrl="[path to access files publically]" processTimeout="00:30:00">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Custom.CustomStorageServiceTest, BetterCms.Sandbox.Mvc4"/>
  </storage>
  -->

  <!-- ******************** CACHE *********************** -->
  <!-- cacheType="HttpRuntime" is default cache provider. -->
  <cache enabled="true" timeout="00:10:00" cacheType="HttpRuntime" />

  <!-- CacheType="Auto" indicates to scan for the cache service in the installed modules list.   
  <cache enabled="true" timeout="00:10:00" cacheType="Auto" /> -->

  <!-- CacheType="Custom" defines to use concrete cache service implementation defined with the typeName property.
  <cache enabled="true" timeout="00:10:00" cacheType="Custom">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Custom.CustomCacheTest, BetterCms.Sandbox.Mvc4"/>
  </cache> -->

  <database
     schemaName="dbo"
     connectionStringName="BetterCms">
  </database>

  <!-- If custom role provider is used instead of "BetterCms.Module.Users.Provider.RoleProvider",
       custom roles need to be mapped to BetterCMS permissions. Example:
  <security fullAccessRoles="Owner">
    <customRoles>
      <add permission="BcmsEditContent" roles="User" />
      <add permission="BcmsPublishContent" roles="User" />
      <add permission="BcmsDeleteContent" roles="User, Admin" />
      <add permission="BcmsAdministration" roles="Admin" />
    </customRoles>
  </security>
  -->

  <moduleGallery
    feedUrl="http://mynugetfeed.com/nuget">
  </moduleGallery>
</cms>