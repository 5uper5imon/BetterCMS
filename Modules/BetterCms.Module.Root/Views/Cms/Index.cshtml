@using BetterCms.Module.Root.Mvc
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Root.Mvc.PageHtmlRenderer

@model BetterCms.Module.Root.ViewModels.Cms.RenderPageViewModel

@{
    ViewBag.Title = Model.Title;
}

@if (Model.RenderAdminMode)
{
    Layout = "~/Areas/bcms-Root/Views/Shared/CmsLayout.cshtml";

    var privateModel = Model.Clone();
    privateModel.RenderAdminMode = false;

    var pageSource = ViewRenderingExtensions.RenderPageToString(ViewContext.Controller as CmsControllerBase, privateModel);

    <iframe id="bcms-content-frame" style="position: absolute; width: 100%; height: 100%; padding: 0; margin: 0; border: 0; top: 0; left: 0; right: 0;"></iframe>

    <script type="text/html" id="bcms-content-html">@pageSource</script>
    <script type="text/javascript" language="javascript">
        function decodeHtml(html) {
            var txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value;
        }

        var html = document.getElementById('bcms-content-html').text,
            text = decodeHtml(html),
            iframe = document.getElementById('bcms-content-frame'),
            host = location.protocol + '//' + location.host,
            l = host.length,
            links,
            tryCount = 0,
            maxTryCount = 5,
            tryTimeout = 100,
            onTimeout = function() {
                if (tryCount < maxTryCount) {
                    setTimeout(function () {
                        var i, url, update;
                        console.log("Timeout %s of %s. Length of document: ", tryCount, maxTryCount);
                        links = iframe.contentWindow.document.getElementsByTagName('a');

                        if (links.length > 0) {
                            for (i = 0; i < links.length ; i++) {
                                url = links[i].href;
                                update = true;

                                if (url && (url.slice(0, l) == host || (url.slice(0, 1) == '/' && url.slice(0, 2) !== '//'))) {
                                    update = false;
                                }

                                if (update) {
                                    links[i].target = '_parent';
                                }

                                console.log("URL: %s, update: %s, target: %s", url, update, links[i].target);
                            }
                        } else {
                            onTimeout();
                        }
                    }, tryTimeout);

                    tryCount ++;
                }
            };

        iframe.contentWindow.contents = text;
        iframe.src = 'javascript:window["contents"]';

        onTimeout();
    </script>
}
else
{
    if (Model.LayoutPath != null && !string.IsNullOrEmpty(Model.LayoutPath))
    {
        Layout = Model.LayoutPath;
    }
    else
    {
        Layout = "~/Areas/bcms-Root/Views/Shared/BaseLayout.cshtml";
    }

    // Render regions and contents.
    Html.RenderSectionContents(this, Model);
    if (Model.RenderingPage == null)
    {
        @Html.RenderInvisibleRegions(Model)
    }
    else
    {
        @PageContentRenderHelper.InvisibleRegionsPlaceholder
    }
}