@using BetterCms.Module.Pages.Content.Resources
@using BetterCms.Module.Root.Content.Resources
@using BetterCms.Module.Root.Mvc.Helpers

@model BetterCms.Module.Pages.ViewModels.Sitemap.SitemapNodeViewModel
<!-- ko with: sitemap -->
<div class="bcms-expand-link-holder"@* data-bind="droppable: 'emptyListZone'" TODO: check later. NOTE: jQuery error is raised on leave over. *@>
    <div class="bcms-expand-link" data-bind="click: expandAll">Expand All</div> @*TODO: move to resources.*@
    <div class="bcms-expand-link" data-bind="click: collapseAll">Collapse All</div> @*TODO: move to resources.*@
</div>

<!-- ko if: hasChildNodes() && showHasNoDataMessage() -->
<div class="bcms-nodes-dropzone bcms-nodes-dropzone-active">
    <div class="bcms-node-infotext">@RootGlobalization.Grid_NoDataAvailable_Message</div>
</div>
<!-- /ko -->

<div data-bind='template: { name: "bcms-navigation-sitemapnode-template" }'></div>
<!-- /ko -->

<script type="text/html" id="bcms-navigation-sitemapnode-template">
    <!-- ko if: !hasChildNodes() -->
    <div class="bcms-nodes-dropzone bcms-nodes-dropzone-active" data-bind="droppable: 'emptyListZone'">
        <div class="bcms-node-infotext">@NavigationGlobalization.Sitemap_NodeEdit_PlaceLinkHere</div>
    </div>
    <!-- /ko -->

    <!-- ko foreach: childNodes -->
    <!-- ko if: isVisible() && !isDeleted() -->
    <div class="bcms-tree-holder">
        <!-- ko if: isFirstNode() -->
        <div class="bcms-nodes-dropzone"
            data-bind="css: { 'bcms-nodes-dropzone-active': activeZone() == 'topZone'  }, droppable: 'topZone'">
            <div class="bcms-node-infotext">@NavigationGlobalization.Sitemap_NodeEdit_PlaceLinkHere</div>
        </div>
        <!-- /ko -->
        <div data-bind="draggable: $parentContext.$index, style: { zIndex: !isBeingDragged() ? '0' : '9999' }">
            <div class="bcms-placement-node" data-bind="
                        attr: { id: containerId }, 
                        css: { 'bcms-placement-node-drag': isBeingDragged(), 'bcms-placement-node-edit': isActive(), 'bcms-placement-one-active': !isBeingDragged() && superDraggable() }">
                <!-- ko if: hasChildNodes() -->
                <a class="bcms-expand-collapse-node" data-bind="click: toggleExpand, css: { 'bcms-expanded-nodes': isExpanded() }">&nbsp;</a>
                <!-- /ko -->
                <div class="bcms-node-info" data-bind="droppable: 'middleZone'">
                    <!-- ko if: getSitemap().settings.canEditNode && !getSitemap().settings.canDragNode -->
                    <a class="bcms-placement-title bcms-content-titles" data-bind="text: title, click: startEditSitemapNode"></a>
                    <div class="bcms-placement-path"><a data-bind="text: url, attr:{href: url}" href="" target="_blank"></a></div>
                    <!-- /ko -->
                    <!-- ko ifnot: getSitemap().settings.canEditNode && !getSitemap().settings.canDragNode -->
                    <!-- ko if: getSitemap().settings.canEditNode -->
                    <div class="bcms-placement-title" data-bind="text: title"></div>
                    <div class="bcms-placement-path"><a data-bind="text: url, click: startEditSitemapNode"></a></div>
                    <!-- /ko -->
                    <!-- ko ifnot: getSitemap().settings.canEditNode -->
                    <div class="bcms-placement-title" data-bind="text: title"></div>
                    <div class="bcms-placement-path" data-bind="text: url"></div>
                    <!-- /ko -->
                    <!-- /ko -->
                </div>
                <!-- ko if: getSitemap().settings.canEditNode -->
                <div class="bcms-edit-node">
                    <div class="bcms-edit-node-holder">
                        @Html.Tooltip(NavigationGlobalization.Sitemap_NodeEdit_Title_Tooltip_Message)
                        <div class="bcms-input-box" style="width: 65%;">
                            @Html.TextBoxFor(m => m.Title, new
                            {
                                data_bind = "value: title, valueUpdate: 'afterkeydown', enterPress: saveSitemapNodeWithValidation, escPress: cancelEditSitemapNode, hasfocus: isActive()",
                                @class = "bcms-editor-field-box",
                                Title = (string)null,
                            })
                            @Html.BcmsValidationMessageFor(m => m.Title)
                        </div>
                    </div>
                    <div class="bcms-edit-node-holder">
                        @Html.Tooltip(NavigationGlobalization.Sitemap_NodeEdit_Url_Tooltip_Message)
                        <div class="bcms-custom-input-box" style="width: 65%;">
                            @Html.TextBoxFor(m => m.Url, new
                            {
                                data_bind = "value: url, valueUpdate: 'afterkeydown', enterPress: saveSitemapNodeWithValidation, escPress: cancelEditSitemapNode, attr: { 'readonly': getReadonlyUrlState() }",
                                @class = "bcms-editor-field-box",
                                Url = (string)null,
                            })
                            @Html.BcmsValidationMessageFor(m => m.Url)
                        </div>
                        <div class="bcms-btn-small" data-bind="click: saveSitemapNodeWithValidation, text: getSitemap().settings.nodeSaveButtonTitle">@RootGlobalization.Button_Ok</div>
                        <div class="bcms-btn-links-small" data-bind="click: cancelEditSitemapNode">@RootGlobalization.Button_Cancel</div>
                    </div>
                </div>
                <!-- /ko -->
                <div class="bcms-node-controls">
                    <!-- ko if: getSitemap().settings.canEditNode -->
                    <a class="bcms-icn-edit" data-bind="click: startEditSitemapNode">@RootGlobalization.Button_Edit</a>
                    <!-- /ko -->
                    <!-- ko if: getSitemap().settings.canDeleteNode -->
                    <a class="bcms-icn-delete" data-bind="click: deleteSitemapNode">@RootGlobalization.Button_Delete</a>
                    <!-- /ko -->
                </div>
            </div>
            <!-- ko if: activeZone() == 'middleZone' -->
            <div class="bcms-zone-holder">
                <div class="bcms-nodes-dropzone bcms-nodes-dropzone-active">
                    <div class="bcms-node-infotext">@NavigationGlobalization.Sitemap_NodeEdit_PlaceLinkHere</div>
                </div>
            </div>
            <!-- /ko -->
            <!-- ko if: isExpanded() && hasChildNodes() -->
            <div class="bcms-zone-holder" data-bind="template: { name: 'bcms-navigation-sitemapnode-template' }"></div>
            <!-- /ko -->
            <!-- ko if: !isBeingDragged() -->
            <div class="bcms-nodes-dropzone"
                data-bind="css: { 'bcms-nodes-dropzone-active': activeZone() == 'bottomZone' },
                            style: { paddingBottom: !(parentNode().parentNode) && isLastNode() ? '80px' : '' },
                            droppable: 'bottomZone'">
                <div class="bcms-node-infotext">@NavigationGlobalization.Sitemap_NodeEdit_PlaceLinkHere</div>
            </div>
            <!-- /ko -->
        </div>
    </div>
    <!-- /ko -->
    <!-- /ko -->
</script>
