@using BetterCms.Module.Pages.Content.Resources
@using BetterCms.Module.Pages.ViewModels.Content
@using BetterCms.Module.Root.Mvc.Grids.Extensions
@using BetterCms.Module.Root.Mvc.Grids.TableRenderers
@using MvcContrib.UI.Grid

@model BetterCms.Module.Pages.ViewModels.Widgets.ServerControlWidgetViewModel
           
@{
    Action<ColumnBuilder<ContentOptionViewModel>> columns = column =>
    {
        column.EditButtonColumn();

        column.For(model => Html.InlineEditColumnWithNamePattern(m => model.OptionKey, "bcms-option-key", "bcms-old-option-key", "ContentOptions[{0}].OptionKey"))
            .Named(PagesGlobalization.ContentOptions_OptionKeyColumn)
            .Sortable(false)
            .HeaderAttributes(@style => "width: 200px;")
            .Attributes(@class => "bcms-option-key");

        column.For(model => Html.InlineEditColumnWithNamePattern(m => model.OptionDefaultValue, "bcms-option-value", "bcms-old-option-value", "ContentOptions[{0}].OptionDefaultValue"))
            .Named(PagesGlobalization.ContentOptions_OptionDefaultValueColumn)
            .Sortable(false)
            .Attributes(@class => "bcms-option-value");
        
        column.InlineEditControlsColumn();
    };
}
<div class="bcms-top-block-holder">
    <div class="bcms-btn-links-main" id="bcms-add-option-button">@PagesGlobalization.ContentOptions_AddNew</div>
</div>

@Html.Grid(Model.ContentOptions).Columns(columns).Attributes(@class => "bcms-tables", @id => "bcms-options-grid").RenderUsing(new EditableHtmlTableGridRenderer<ContentOptionViewModel>())

<script type="text/html" id="bcms-editable-row-template">
    @Html.Grid(new List<ContentOptionViewModel> {new ContentOptionViewModel()}).Columns(columns).Attributes(@class => "bcms-tables").RenderUsing(new HtmlTableGridSingleRowRenderer<ContentOptionViewModel>())
</script>

