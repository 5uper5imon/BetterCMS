@using BetterCms.Module.Pages.Content.Resources
@using BetterCms.Module.Pages.Controllers
@using BetterCms.Module.Pages.ViewModels.SiteSettings
@using BetterCms.Module.Root.Content.Resources
@using BetterCms.Module.Root.Mvc.Grids.Extensions
@using BetterCms.Module.Root.Mvc.Grids.TableRenderers
@using BetterCms.Module.Root.Mvc.Helpers
@using Microsoft.Web.Mvc
@using MvcContrib
@using MvcContrib.UI.Grid

@model SiteSettingWidgetListViewModel
          

@{
    Action<ColumnBuilder<SiteSettingWidgetItemViewModel>> columns = column =>
    {
        column.EditButtonColumn(renderId: false);
        
        column.For(f => string.Format("<a class=\"bcms-tables-link bcms-grid-item-edit-button bcms-widget-name\" data-id=\"{0}\">{1}</a>", f.Id, f.WidgetName))
            .Named(PagesGlobalization.SiteSettings_Widgets_NameColumn)
            .SortColumnName("WidgetName")
            .HeaderAttributes(@style => "width: 245px;")
            .Encode(false);

        column.For(f => f.CategoryName)
            .Named(PagesGlobalization.SiteSettings_Widgets_CategoryColumn)
            .SortColumnName("CategoryName")
            .Attributes(@class => "bcms-category-name");

        column.For(f => f.Status)
            .Named(PagesGlobalization.SiteSettings_Widgets_StatusColumn)
            .Sortable(false)
            .Attributes(@class => "bcms-widget-status");

        column.HistoryButtonColumn(renderId: false);
        
        column.DeleteButtonColumn(renderId:false);
    };
}

@using (Html.BeginForm<WidgetsController>(f => f.Widgets(null), FormMethod.Post, new { @id = "bcms-widgets-form" }))
{
    @Html.HiddenGridOptions(Model.GridOptions)
    
    <div class="bcms-twocols-title-block">
        <div class="bcms-large-titles">@PagesGlobalization.SiteSettings_Widgets_Title</div>
        <div class="bcms-btn-links-main" id="bcms-create-widget-button">@PagesGlobalization.SiteSettings_Widgets_AddNew</div>
        <div class="bcms-btn-links-main" id="bcms-register-widget-button">@PagesGlobalization.SiteSettings_Widgets_RegisterNew</div>
        <div class="bcms-search-block">
            @Html.TextBoxFor(m => m.SearchQuery, new { @class = "bcms-editor-field-box bcms-search-query" })
            <div class="bcms-btn-search" id="bcms-widget-search-btn">@PagesGlobalization.SiteSettings_Widgets_Search</div>
        </div>
        @Html.MessagesBox("bcms-widgets-messages")
    </div>    
    @(Html
          .Grid(Model.Items)
          .Sort(Model.GridOptions)
          .Columns(columns)
          .Attributes(@class => "bcms-tables")          
          .RowAttributes(delegate(GridRowViewData<SiteSettingWidgetItemViewModel> row)
                  {
                      return new Dictionary<string, object>
                              {
                                    {"data-id", row.Item.Id},
                                    {"data-type", row.Item.WidgetType},
                                    {"data-version", row.Item.Version}
                              };
              })
          .RenderUsing(new EditableHtmlTableGridRenderer<SiteSettingWidgetItemViewModel>()))
}

<script type="text/html" id="bcms-widget-list-row-template">
    @(Html
        .Grid(new List<SiteSettingWidgetItemViewModel> {new SiteSettingWidgetItemViewModel()})
        .Columns(columns)
        .Attributes(@class => "bcms-tables")
        .RenderUsing(new HtmlTableGridSingleRowRenderer<SiteSettingWidgetItemViewModel>()))
</script>

