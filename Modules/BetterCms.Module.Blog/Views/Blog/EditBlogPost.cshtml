@using BetterCms.Module.Blog.Content.Resources
@using BetterCms.Module.Blog.Controllers
@using BetterCms.Module.Root.Content.Resources
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Root.Mvc.UI
@using Microsoft.Web.Mvc

@model BetterCms.Module.Blog.ViewModels.Blog.BlogPostViewModel

<div class="bcms-scroll-window">
    @using (Html.BeginForm<BlogController>(c => c.SaveBlogPost(null), FormMethod.Post, new { @id = "bcms-blog-post-form", @class = "bcms-ajax-form" }))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Version)
        @Html.HiddenFor(model => model.ImageId, new {data_bind = "value: image().id()"})

        <div class="bcms-new-blog-content">
    
            @Html.MessagesBox("bcms-blog-post-messages")

            <div class="bcms-blog-left">

                <div class="bcms-input-list-holder bcms-first-child-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_Title_Tooltip_Title, BlogGlobalization.EditBlockPost_Title_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_Title_Title</div>
                    @Html.TextBoxFor(m => m.Title, new {@style = "width: 510px;", @class = "bcms-editor-field-box"})
                </div>
                <div class="bcms-input-list-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_IntroText_Tooltip_Title, BlogGlobalization.EditBlockPost_IntroText_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_IntroText_Title</div>
                    @Html.TextAreaFor(m => m.IntroText, new {@style = "width: 510px; height: 170px;", @class = "bcms-editor-field-area"})
                </div>
                <div class="bcms-input-list-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_Content_Tooltip_Title, BlogGlobalization.EditBlockPost_Content_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_Content_Title</div>
                    @Html.TextAreaFor(model => model.Content, new { @id = "bcms-contenthtml" })
                </div>

            </div>
            <div class="bcms-blog-right">

                <div class="bcms-blog-dates-holder">
                    <div class="bcms-input-field-holder">
                        @Html.Tooltip(BlogGlobalization.EditBlockPost_LiveDates_Tooltip_Title, BlogGlobalization.EditBlockPost_LiveDates_Tooltip_Description)
                        <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_LiveFrom_Title</div>
                        @Html.DateTextBoxFor(model => model.LiveFromDate, Model.LiveFromDate, new Dictionary<string, object> { { "class", "bcms-editor-field-box bcms-datepicker" }, { "style", "width: 127px;" } })
                    </div>
                    <div class="bcms-input-field-holder">
                        <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_LiveTo_Title</div>
                        @Html.DateTextBoxFor(model => model.LiveToDate, Model.LiveToDate, new Dictionary<string, object> { { "class", "bcms-editor-field-box bcms-datepicker" }, { "style", "width: 127px;" } })
                    </div>
                </div>

                <div class="bcms-input-field-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_FeaturedImage_Tooltip_Title, BlogGlobalization.EditBlockPost_FeaturedImage_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_FeaturedImage_Title</div>
                    <div class="bcms-uploaded-image">
                        <!-- ko if: image().url() -->
                        <a href="#" data-bind="click: image().preview"><img data-bind="attr: {src: image().thumbnailUrl(), alt: image().tooltip() }" /></a>
                        <!-- /ko -->
                    </div>
                    <div class="bcms-upload-info">
                        <div class="bcms-upload-info-text">@* TODO: which text should go there? *@Make sure to size this imageto 200x125 pixels. It will be displayed as a thumbnail with your post.</div>
                        <div class="bcms-btn-small" data-bind="click: image().select.bind(image())">@BlogGlobalization.EditBlockPost_SelectImage_Button_Title</div>
                    </div>
                </div>

                <div class="bcms-input-field-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_Author_Tooltip_Title, BlogGlobalization.EditBlockPost_Author_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_Author_Title</div>
                    @Html.DropDownListFor(model => model.AuthorId, Model.Authors.ToSelectList(Model.AuthorId), string.Empty, new { @class = "bcms-global-select", @style = "width: 245px;" })
                </div>

                <div class="bcms-input-field-holder">
                    @Html.Tooltip(BlogGlobalization.EditBlockPost_Category_Tooltip_Title, BlogGlobalization.EditBlockPost_Category_Tooltip_Description)
                    <div class="bcms-content-titles">@BlogGlobalization.EditBlockPost_Category_Title</div>
                    @Html.DropDownListFor(model => model.CategoryId, Model.Categories.ToSelectList(Model.CategoryId), string.Empty, new { @class = "bcms-global-select", @style = "width: 245px;" })
                </div>

                <div class="bcms-blog-tags-holder">
                    <div class="bcms-input-list-holder">
                        @Html.Tooltip(BlogGlobalization.EditBlockPost_Tags_Tooltip_Title, BlogGlobalization.EditBlockPost_Tags_Tooltip_Description)
                        <div class="bcms-content-titles">
                            @BlogGlobalization.EditBlockPost_AddTags_Title
                            <div class="bcms-btn-plus" data-bind="css: {'bcms-btn-plus-expand': tags.isExpanded()}, click: tags.expandCollapse">&nbsp;</div>
                            <div class="bcms-tags-field-holder" data-bind="visible: tags.isExpanded()">
                                <input type="text" class="bcms-add-tags-field" style="width: 107px;" data-bind="value: tags.newTag, valueUpdate: 'afterkeydown', hasfocus: tags.isExpanded()" />
                            </div>
                        </div>
                        <div class="bcms-single-tag-holder" id="bcms-categories-container" data-bind="foreach: tags.tags()">
                            <div class="bcms-single-tag"><span data-bind="text: name()"></span><a data-bind="click: remove">@RootGlobalization.Button_Remove</a></div>
                            <input type="hidden" data-bind="attr:{ name: getTagInputName($index()), value: name() }" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>