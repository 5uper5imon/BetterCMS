@using BetterCms.Module.MediaManager
@using BetterCms.Module.MediaManager.Content.Resources
@using BetterCms.Module.MediaManager.Controllers
@using BetterCms.Module.Root
@using BetterCms.Module.Root.Mvc
@using BetterCms.Module.Root.Mvc.Helpers
@using Microsoft.Web.Mvc

@model BetterCms.Module.MediaManager.ViewModels.Upload.MultiFileUploadViewModel
           
<div class="bcms-scroll-window">
    @Html.TabbedContentMessagesBox("bcms-multi-file-upload-messages")
    <div class="bcms-file-manager-inner bcms-clearfix" id="bcms-media-uploads">

        @using (Html.BeginForm("UploadSingleFile", "Upload", FormMethod.Post, new
        {
            enctype = "multipart/form-data",
            id = "ImgForm",
            name = "ImgForm",
            target = "UploadTarget",
            @class = "bcms-ajax-form"
        }))
        {
            <div class="bcms-input-list-holder">
                @Html.HiddenFor(f => f.ReuploadMediaId)
                @Html.HiddenFor(f => f.RootFolderId)
                @Html.HiddenFor(f => f.RootFolderType)
                @if (Model.IsMedia && Model.RootFolderId.HasDefaultValue() && Model.ReuploadMediaId.HasDefaultValue())
                {
                    @Html.Tooltip(MediaGlobalization.MultiFileUpload_SelectFolder_Help_Message)
                    <div class="bcms-content-titles">@MediaGlobalization.MultiFileUpload_SelectFolder</div>
                    @Html.DropDownListFor(f => f.SelectedFolderId, Model.Folders.Select(o => new SelectListItem { Selected = Model.SelectedFolderId == o.Item1, Text = o.Item2, Value = o.Item1.ToString() }), new { @class = "bcms-global-select" })
                }
                else
                {
                    @Html.HiddenFor(f => f.SelectedFolderId, new { @Value = Model.RootFolderId })
                }
            </div>
            
            @Html.Partial(MediaManagerModuleConstants.SingleFileUploadDropZoneView)
        }
        @using (Html.BeginForm<UploadController>(c => c.SaveUploads(null), FormMethod.Post, new { id = "SaveForm", name = "SaveForm", @class = "bcms-ajax-form" }))
        {
            @Html.HiddenFor(f => f.ReuploadMediaId)
            @Html.HiddenFor(m => m.RootFolderId)
            @Html.HiddenFor(m => m.RootFolderType)
            if (Model.RootFolderId.HasDefaultValue())
            {
                @Html.HiddenFor(m => m.SelectedFolderId)
            }
            else
            {
                @Html.HiddenFor(m => m.SelectedFolderId, new { @Value = Model.RootFolderId })
            }

            <div class="bcms-upload-holder" data-bind="template: { name: 'bcms-file-upload-template' }"></div>
            
            if (Model.AccessControlEnabled)
            {
                @Html.Partial(RootModuleConstants.AccessControlTemplate)
            }
        }
        
        <iframe id="UploadTarget" name="UploadTarget" style="position: absolute; left: -999em; top: -999em;"></iframe>
        <div id="Images"></div>

        @Html.Partial(MediaManagerModuleConstants.SingleFileUploadTemplateView)
    </div>
</div>
