@using BetterCms.Module.MediaManager
@using BetterCms.Module.MediaManager.Content.Resources
@using BetterCms.Module.MediaManager.Controllers
@using BetterCms.Module.Root
@using BetterCms.Module.Root.Mvc
@using BetterCms.Module.Root.Mvc.Helpers
@using Microsoft.Web.Mvc

@model BetterCms.Module.MediaManager.ViewModels.Upload.MultiFileUploadViewModel
           
<div class="bcms-scroll-window">
    @Html.TabbedContentMessagesBox("bcms-multi-file-upload-messages")
    
    @if (Model != null)
{
    <div class="bcms-file-manager-inner bcms-clearfix">

        @using (Html.BeginForm<UploadController>(f => f.SaveUploads(null), FormMethod.Post, new { @class = "bcms-ajax-form" }))
        {
            <div class="bcms-input-list-holder">
                @Html.HiddenFor(f => f.ReuploadMediaId)
                @Html.HiddenFor(f => f.RootFolderId)
                @Html.HiddenFor(f => f.AccessControlEnabled)
                @if (Model.IsMedia && Model.RootFolderId.HasDefaultValue() && Model.ReuploadMediaId.HasDefaultValue())
                {
                    @Html.Tooltip(MediaGlobalization.MultiFileUpload_SelectFolder_Help_Message)
                    <div class="bcms-content-titles">@MediaGlobalization.MultiFileUpload_SelectFolder</div>
                    @Html.DropDownListFor(f => f.SelectedFolderId, Model.Folders.Select(o => new SelectListItem { Selected = Model.SelectedFolderId == o.Item1, Text = o.Item2, Value = o.Item1.ToString() }), new { @class = "bcms-global-select" })
                }
                else
                {
                    @Html.HiddenFor(f => f.SelectedFolderId, new { @Value = Model.RootFolderId })
                }
            </div>

            <div id="bcms-media-uploads">
                <div id="bcms-files-dropzone" class="bcms-dropzone">
                    @if (Model.ReuploadMediaId.HasDefaultValue())
                    {
                        <div class="bcms-dropzone-infotext">@MediaGlobalization.MultiFileUpload_DragDropBox</div>
                    }
                    else
                    {
                        <div class="bcms-dropzone-infotext">@MediaGlobalization.MultiFileUpload_DragDropBox_Reupload</div>
                    }
                    <div class="bcms-btn-upload-files">
                        <label for="bcms-files-upload-input" class="bcms-btn-upload-files-text">@MediaGlobalization.MultiFileUpload_UploadButton</label>
                        <input type="file"
                               @(Model.AllowMultiple && Model.ReuploadMediaId.HasDefaultValue() ? "multiple=\"multiple\"" : string.Empty)
                               name="uploadFiles" id="bcms-files-upload-input" style="position: absolute; left: -999em; top: -999em;"
                               data-bind="attr: { accept : filesToAccept() }" />
                    </div>
                </div>

                <div class="bcms-upload-holder" data-bind="template: { name: 'bcms-file-upload-template' }">
                </div>
            </div>

            if (Model.AccessControlEnabled)
            {
                @Html.Partial(RootModuleConstants.AccessControlTemplate)
            }
        }
        
        @Html.Partial(MediaManagerModuleConstants.MultiFileUploadTemplateView)
    </div>
}
</div>
